version: '3.8'

x-service: &service
  logging:
    driver: json-file
    options:
      max-size: "100m"
      max-file: "2"
  restart: always

x-service-deploy: &service-deploy
  mode: replicated
  replicas: 1
  placement:
    constraints:
      - node.role == manager

services:
  # https://sysadmins.co.za/setup-a-nfs-server-with-docker/
  nfs:
    container_name: nfs
    image: itsthenetwork/nfs-server-alpine:12
    ports:
      - 2049:2049
    deploy:
      <<: *service-deploy
    <<: *service
    environment:
      SHARED_DIRECTORY: ${DATAPATH?Variable DATAPATH not set}
      PERMITTED: ${MASTER_IP_MASK?Variable MASTER_IP_MASK not set}
    volumes:
      - ${DATAPATH?Variable DATAPATH not set}:${DATAPATH?Variable DATAPATH not set}
    privileged: true
    #cap_add:
      #- SYS_ADMIN
      #- SETPCAP
      #- NET_ADMIN
      #- SYS_TIME
    entrypoint: /usr/bin/nfsd.sh

  # https://doc.traefik.io/traefik/getting-started/quick-start/
  # https://dockerswarm.rocks/traefik/
  traefik:
    container_name: traefik
    image: traefik:v2.6
    ports:
      - 80:80
      - 443:443
    deploy:
      <<: *service-deploy
      labels:
        - traefik.enable=true
        - traefik.docker.network=ingress
        - traefik.http.middlewares.admin-auth.basicauth.users=${USERNAME?Variable USERNAME not set}:${HASHED_PASSWORD?Variable HASHED_PASSWORD not set}
        - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
        - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
        - traefik.http.routers.traefik-api-http.rule=Host(`traefik.${DOMAIN?Variable DOMAIN not set}`)
        - traefik.http.routers.traefik-api-http.entrypoints=http
        - traefik.http.routers.traefik-api-http.service=api@internal
        #- traefik.http.routers.traefik-api-http.middlewares=https-redirect
        - traefik.http.routers.traefik-api-http.middlewares=admin-auth
        - traefik.http.routers.traefik-api-https.rule=Host(`traefik.${DOMAIN?Variable DOMAIN not set}`)
        - traefik.http.routers.traefik-api-https.entrypoints=https
        - traefik.http.routers.traefik-api-https.tls=true
        - traefik.http.routers.traefik-api-https.service=api@internal
        - traefik.http.routers.traefik-api-https.tls.certresolver=le
        - traefik.http.routers.traefik-api-https.middlewares=admin-auth
        - traefik.http.services.traefik.loadbalancer.server.port=8080
    <<: *service
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-certs:/certificates
    command:
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --providers.docker.swarmmode
      - --providers.docker.defaultRule=Host(`{{ .Name }}.${DOMAIN?Variable DOMAIN not set}`)
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --certificatesresolvers.le.acme.email=${EMAIL?Variable EMAIL not set}
      - --certificatesresolvers.le.acme.storage=/certificates/acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --accesslog
      - --log
      - --api
      - --api.dashboard=true
      - --ping=true
      - --ping.entryPoint=ping
      - --entryPoints.ping.address=:8081
      - --metrics.prometheus=true
      - --entryPoints.metrics.address=:8082
      - --metrics.prometheus.entryPoint=metrics
      - --serverstransport.insecureskipverify=true
    healthcheck:
      test: ["CMD", "wget", "-c", "http://localhost:8081/ping"]
      interval: 1s
      timeout: 1s
      retries: 10
      start_period: 2s
    networks:
      - ingress
      - database
      - monitoring
      - bitwarden
      - gitlab
      - registry
      - minio
      - nocodb
      - openproject
      - portainer
      - strapi
      - appwrite
      - taiga
      - rocketchat
      - vaultwarden
      - twake
      - tuleap
      - nextcloud

x-volume: &volume
  driver: local
x-volume-driver-opts: &volume-driver-opts
  type: nfs
  o: nfsvers=4,rw

volumes:
  traefik-certs:
    name: traefik-certs
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: "${MASTER_IP?Variable MASTER_IP not set}:${DATAPATH?Variable DATAPATH not set}/traefik/certificates"
  portainer-data:
    name: portainer-data
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: "${MASTER_IP?Variable MASTER_IP not set}:${DATAPATH?Variable DATAPATH not set}/portainer/data"
  registry-data:
    name: registry-data
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: "${MASTER_IP?Variable MASTER_IP not set}:${DATAPATH?Variable DATAPATH not set}/registry/data"
  minio-data:
    name: minio-data
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: "${MASTER_IP?Variable MASTER_IP not set}:${DATAPATH?Variable DATAPATH not set}/minio/data"
  nocodb-data:
    name: nocodb-data
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: "${MASTER_IP?Variable MASTER_IP not set}:${DATAPATH?Variable DATAPATH not set}/nocodb/data"
  openproject-data:
    name: openproject-data
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: "${MASTER_IP?Variable MASTER_IP not set}:${DATAPATH?Variable DATAPATH not set}/openproject/data"
  strapi-data:
    name: strapi-data
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: "${MASTER_IP?Variable MASTER_IP not set}:${DATAPATH?Variable DATAPATH not set}/strapi/data"
  telegraf-configs:
    name: telegraf-configs
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: "${MASTER_IP?Variable MASTER_IP not set}:${DATAPATH?Variable DATAPATH not set}/telegraf/configs"
  grafana-data:
    name: grafana-data
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: "${MASTER_IP?Variable MASTER_IP not set}:${DATAPATH?Variable DATAPATH not set}/grafana/data"
  grafana-provisioning:
    name: grafana-provisioning
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: "${MASTER_IP?Variable MASTER_IP not set}:${DATAPATH?Variable DATAPATH not set}/grafana/provisioning"
  rocketchat-data:
    name: rocketchat-data
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: "${MASTER_IP?Variable MASTER_IP not set}:${DATAPATH?Variable DATAPATH not set}/rocketchat/data"
  gitlab-data:
    name: gitlab-data
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: "${MASTER_IP?Variable MASTER_IP not set}:${DATAPATH?Variable DATAPATH not set}/gitlab/data"
  gitlab-configs:
    name: gitlab-configs
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: "${MASTER_IP?Variable MASTER_IP not set}:${DATAPATH?Variable DATAPATH not set}/gitlab/configs"
  gitlab-logs:
    name: gitlab-logs
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: "${MASTER_IP?Variable MASTER_IP not set}:${DATAPATH?Variable DATAPATH not set}/gitlab/logs"
  vaultwarden-data:
    name: vaultwarden-data
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: "${MASTER_IP?Variable MASTER_IP not set}:${DATAPATH?Variable DATAPATH not set}/vaultwarden/data"
  twake-data:
    name: twake-data
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: "${MASTER_IP?Variable MASTER_IP not set}:${DATAPATH?Variable DATAPATH not set}/twake/data"
  tuleap-data:
    name: tuleap-data
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: "${MASTER_IP?Variable MASTER_IP not set}:${DATAPATH?Variable DATAPATH not set}/tuleap/data"
  nextcloud-data:
    name: nextcloud-data
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: "${MASTER_IP?Variable MASTER_IP not set}:${DATAPATH?Variable DATAPATH not set}/nextcloud/data"

x-network: &network
  driver: overlay
  attachable: true

networks:
  ingress:
    name: ingress
    <<: *network
  monitoring:
    name: monitoring
    <<: *network
  bitwarden:
    name: bitwarden
    <<: *network
  gitlab:
    name: gitlab
    <<: *network
  registry:
    name: registry
    <<: *network
  minio:
    name: minio
    <<: *network
  database:
    name: database
    <<: *network
  nocodb:
    name: nocodb
    <<: *network
  openproject:
    name: openproject
    <<: *network
  portainer:
    name: portainer
    <<: *network
  strapi:
    name: strapi
    <<: *network
  appwrite:
    name: appwrite
    <<: *network
  taiga:
    name: taiga
    <<: *network
  rocketchat:
    name: rocketchat
    <<: *network
  vaultwarden:
    name: vaultwarden
    <<: *network
  twake:
    name: twake
    <<: *network
  tuleap:
    name: tuleap
    <<: *network
  nextcloud:
    name: nextcloud
    <<: *network
